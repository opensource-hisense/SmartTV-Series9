/*
 * Copyright (c) 2015, ARM Limited and Contributors. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of ARM nor the names of its contributors may be used
 * to endorse or promote products derived from this software without specific
 * prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef __MTK_SIP_SVC_H__
#define __MTK_SIP_SVC_H__

#include <stdint.h>

/* SMC function IDs for SiP Service queries */
#define SIP_SVC_CALL_COUNT		0x8200ff00
#define SIP_SVC_UID			0x8200ff01
/*					0x8200ff02 is reserved */
#define SIP_SVC_VERSION			0x8200ff03

/* Mediatek SiP Service Calls version numbers */
#define MTK_SIP_SVC_VERSION_MAJOR	0x0
#define MTK_SIP_SVC_VERSION_MINOR	0x1

#define SMC_AARCH64_BIT		0x40000000

/* Number of Mediatek SiP Calls implemented */
#define MTK_COMMON_SIP_NUM_CALLS	4

/* Mediatek SiP Service Calls function IDs */
#define MTK_SIP_SET_AUTHORIZED_SECURE_REG	0x82000001

/* For MTK SMC from Secure OS */
/* 0x82000000 - 0x820000FF & 0xC2000000 - 0xC20000FF */
#define MTK_SIP_KERNEL_BOOT_AARCH32		0x82000200
#define MTK_SIP_KERNEL_BOOT_AARCH64		0xC2000200

/* Mediatek SiP Calls error code */
enum {
	MTK_SIP_E_SUCCESS = 0,
	MTK_SIP_E_INVALID_PARAM = -1,
	MTK_SIP_E_NOT_SUPPORTED = -2,
	MTK_SIP_E_INVALID_RANGE = -3,
	MTK_SIP_E_PERMISSION_DENY = -4,
	MTK_SIP_E_LOCK_FAIL = -5
};

/*
 * This function should be implemented in Mediatek SOC directory. It fullfills
 * MTK_SIP_SET_AUTHORIZED_SECURE_REG SiP call by checking the sreg with the
 * predefined secure register list, if a match was found, set val to sreg.
 *
 * Return MTK_SIP_E_SUCCESS on success, and MTK_SIP_E_INVALID_PARAM on failure.
 */
uint64_t mt_sip_set_authorized_sreg(uint32_t sreg, uint32_t val);

/*******************************************************************************
 * Plat SiP function constants
 ******************************************************************************/
#define MTK_PLAT_SIP_NUM_CALLS	0

/*******************************************************************************
 * Defines for runtime services func ids
 ******************************************************************************/
/* SMC32 ID range from	0x82000000 to	0x82000FFF */
/* SMC64 ID range from	0xC2000000 to	0xC2000FFF */

/* For MTK SMC from Trustonic TEE */
/*	0x82000000 -	0x820000FF &	0xC2000000 -	0xC20000FF */
#define MTK_SIP_TBASE_HWUID_AARCH32	0x82000000
#define MTK_SIP_SET_AUTHORIZED_SECURE_REG	0x82000001  /* Has been upstream by Tablet project; keep it */

/* For MTK SMC from Boot-loader */
/*	0x82000100 -	0x820001FF &	0xC2000100 -	0xC20001FF */
#define MTK_SIP_BL_INIT_AARCH32		0x82000100
#define MTK_SIP_BL_INIT_AARCH64		0xC2000100
#define MTK_SIP_LK_DAPC_INIT_AARCH32	0x82000101
#define MTK_SIP_LK_DAPC_INIT_AARCH64	0xC2000101
#define MTK_SIP_LK_MD_REG_WRITE_AARCH32	0x82000102
#define MTK_SIP_LK_MD_REG_WRITE_AARCH64	0xC2000102
#define MTK_SIP_LK_RPMB_INIT_AARCH32	0x82000103
#define MTK_SIP_LK_RPMB_INIT_AARCH64	0xC2000103
#define MTK_SIP_LK_RPMB_UNINIT_AARCH32	0x82000104
#define MTK_SIP_LK_RPMB_UNINIT_AARCH64	0xC2000104
#define MTK_SIP_LK_RPMB_HMAC_AARCH32	0x82000105
#define MTK_SIP_LK_RPMB_HMAC_AARCH64	0xC2000105
#define MTK_SIP_LK_WDT_AARCH32			0x82000106
#define MTK_SIP_LK_WDT_AARCH64			0xC2000106
#define MTK_SIP_LK_LASTBUS_AARCH32		0x82000107
#define MTK_SIP_LK_LASTBUS_AARCH64		0xC2000107
#define MTK_SIP_LK_PLAT_DEBUG_AARCH32		0x82000108
#define MTK_SIP_LK_PLAT_DEBUG_AARCH64		0xC2000108
#define MTK_SIP_LK_LASTPC_AARCH32	0x82000109
#define MTK_SIP_LK_LASTPC_AARCH64	0xC2000109
#define MTK_SIP_LK_DUMP_ATF_LOG_INFO_AARCH32            0x8200010A
#define MTK_SIP_LK_DUMP_ATF_LOG_INFO_AARCH64            0xC200010A

/* For MTK SMC from Kernel */
/*	0x82000200 -	0x820002FF &	0xC2000200 -	0xC20002FF */
#define MTK_SIP_KERNEL_BOOT_AARCH32		0x82000200
#define MTK_SIP_KERNEL_BOOT_AARCH64		0xC2000200
#define MTK_SIP_KERNEL_MCUSYS_WRITE_AARCH32	0x82000201
#define MTK_SIP_KERNEL_MCUSYS_WRITE_AARCH64	0xC2000201
#define MTK_SIP_KERNEL_MCUSYS_ACCESS_COUNT_AARCH32	0x82000202
#define MTK_SIP_KERNEL_MCUSYS_ACCESS_COUNT_AARCH64	0xC2000202
#define MTK_SIP_KERNEL_L2_SHARING_AARCH32	0x82000203
#define MTK_SIP_KERNEL_L2_SHARING_AARCH64	0xC2000203
#define MTK_SIP_KERNEL_WDT_AARCH32	0x82000204
#define MTK_SIP_KERNEL_WDT_AARCH64	0xC2000204
#define MTK_SIP_KERNEL_GIC_DUMP_AARCH32		0x82000205
#define MTK_SIP_KERNEL_GIC_DUMP_AARCH64		0xC2000205
#define MTK_SIP_KERNEL_DAPC_INIT_AARCH32	0x82000206
#define MTK_SIP_KERNEL_DAPC_INIT_AARCH64	0xC2000206
#define MTK_SIP_KERNEL_EMIMPU_WRITE_AARCH32	0x82000207
#define MTK_SIP_KERNEL_EMIMPU_WRITE_AARCH64	0xC2000207
#define MTK_SIP_KERNEL_EMIMPU_READ_AARCH32	0x82000208
#define MTK_SIP_KERNEL_EMIMPU_READ_AARCH64	0xC2000208
#define MTK_SIP_KERNEL_EMIMPU_SET_AARCH32	0x82000209
#define MTK_SIP_KERNEL_EMIMPU_SET_AARCH64	0xC2000209
#define MTK_SIP_KERNEL_LPDMA_WRITE_AARCH32	0x82000231
#define MTK_SIP_KERNEL_LPDMA_WRITE_AARCH64	0xC2000231
#define MTK_SIP_KERNEL_LPDMA_READ_AARCH32	0x82000232
#define MTK_SIP_KERNEL_LPDMA_READ_AARCH64	0xC2000232
#define MTK_SIP_KERNEL_LPDMA_GET_AARCH32	0x82000233
#define MTK_SIP_KERNEL_LPDMA_GET_AARCH64	0xC2000233
#define MTK_SIP_KERNEL_DO_FIQ_CACHE_AARCH32	0x82000234
#define MTK_SIP_KERNEL_DO_FIQ_CACHE_AARCH64	0xC2000234
#define MTK_SIP_KERNEL_FIQ_CACHE_INIT_AARCH32	0x82000235
#define MTK_SIP_KERNEL_FIQ_CACHE_INIT_AARCH64	0xC2000235
#define MTK_SIP_KERNEL_ICCS_STATE_AARCH32	0x82000236
#define MTK_SIP_KERNEL_ICCS_STATE_AARCH64	0xC2000236

#define MTK_SIP_KERNEL_DRAM_DCS_CHB_AARCH32	0x82000289
#define MTK_SIP_KERNEL_DRAM_DCS_CHB_AARCH64	0xC2000289
/* FIQ migration: new smc for setting gic itarget register*/
#define MTK_SIP_KERNEL_SECURE_IRQ_MIGRATE	0x8200020A

#define MTK_SIP_KERNEL_SCP_RESET_AARCH32	0x8200020B
#define MTK_SIP_KERNEL_SCP_RESET_AARCH64	0xC200020B


#define MTK_SIP_TEE_SEC_DEINT_CONFIGURE_AARCH32	0x8200020C
#define MTK_SIP_TEE_SEC_DEINT_CONFIGURE_AARCH64	0xC200020C

#define MTK_SIP_TEE_SEC_DEINT_RELEASE_AARCH32	0x8200020D
#define MTK_SIP_TEE_SEC_DEINT_RELEASE_AARCH64	0xC200020D

#define MTK_SIP_RAM_DUMP_ADDR_AARCH32	0x8200020E
#define MTK_SIP_RAM_DUMP_ADDR_AARCH64	0xC200020E

#define MTK_SIP_DISABLE_DFD_AARCH32	0x8200020F
#define MTK_SIP_DISABLE_DFD_AARCH64	0xC200020F

#define MTK_SIP_KERNEL_MCSI_A_WRITE_AARCH32	0x82000211
#define MTK_SIP_KERNEL_MCSI_A_WRITE_AARCH64	0xC2000211
#define MTK_SIP_KERNEL_MCSI_A_READ_AARCH32	0x82000212
#define MTK_SIP_KERNEL_MCSI_A_READ_AARCH64	0xC2000212


#define MTK_SIP_KERNEL_TIME_SYNC_AARCH32	0x82000213
#define MTK_SIP_KERNEL_TIME_SYNC_AARCH64	0xC2000213

#define MTK_SIP_KERNEL_DFD_AARCH32		0x82000214
#define MTK_SIP_KERNEL_DFD_AARCH64		0xC2000214

/*Add by alexchang for cluster on/off operation of CPU hotplug*/
#define MTK_SIP_POWER_DOWN_CLUSTER_AARCH32 0x82000215
#define MTK_SIP_POWER_DOWN_CLUSTER_AARCH64 0xC2000215
#define MTK_SIP_POWER_UP_CLUSTER_AARCH32 0x82000216
#define MTK_SIP_POWER_UP_CLUSTER_AARCH64 0xC2000216

#define MTK_SIP_KERNEL_MCSI_SECURE_ACCESS_AARCH32	0x82000217
#define MTK_SIP_KERNEL_MCSI_SECURE_ACCESS_AARCH64	0xC2000217

/*Add by alexchang for core on/off operation of CPU hotplug*/
#define MTK_SIP_POWER_DOWN_CORE_AARCH32 0x82000218
#define MTK_SIP_POWER_DOWN_CORE_AARCH64 0xC2000218
#define MTK_SIP_POWER_UP_CORE_AARCH32 0x82000219
#define MTK_SIP_POWER_UP_CORE_AARCH64 0xC2000219

/* SPM related SMC call */
#define MTK_SIP_KERNEL_SPM_SUSPEND_ARGS_AARCH32 0x8200021A
#define MTK_SIP_KERNEL_SPM_SUSPEND_ARGS_AARCH64 0xC200021A
#define MTK_SIP_KERNEL_SPM_FIRMWARE_STATUS_AARCH32 0x8200021B
#define MTK_SIP_KERNEL_SPM_FIRMWARE_STATUS_AARCH64 0xC200021B
#define MTK_SIP_KERNEL_SPM_IRQ0_HANDLER_AARCH32 0x8200021C
#define MTK_SIP_KERNEL_SPM_IRQ0_HANDLER_AARCH64 0xC200021C
#define MTK_SIP_KERNEL_SPM_AP_MDSRC_REQ_AARCH32 0x8200021D
#define MTK_SIP_KERNEL_SPM_AP_MDSRC_REQ_AARCH64 0xC200021D
#define MTK_SIP_KERNEL_SPM_PWR_CTRL_ARGS_AARCH32 0x8200021E
#define MTK_SIP_KERNEL_SPM_PWR_CTRL_ARGS_AARCH64 0xC200021E
#define MTK_SIP_KERNEL_SPM_LEGACY_SLEEP_AARCH32 0x8200021F
#define MTK_SIP_KERNEL_SPM_LEGACY_SLEEP_AARCH64 0xC200021F

/* SPM related SMC call */
#define MTK_SIP_KERNEL_SPM_VCOREFS_ARGS_AARCH32 0x82000220
#define MTK_SIP_KERNEL_SPM_VCOREFS_ARGS_AARCH64 0xC2000220

/* SPM deepidle related SMC call */
#define MTK_SIP_KERNEL_SPM_DPIDLE_ARGS_AARCH32 0x82000221
#define MTK_SIP_KERNEL_SPM_DPIDLE_ARGS_AARCH64 0xC2000221

/* SPM SODI related SMC call */
#define MTK_SIP_KERNEL_SPM_SODI_ARGS_AARCH32 0x82000222
#define MTK_SIP_KERNEL_SPM_SODI_ARGS_AARCH64 0xC2000222

/* DCM related SMC call */
#define MTK_SIP_KERNEL_DCM_AARCH32 0x82000223
#define MTK_SIP_KERNEL_DCM_AARCH64 0xC2000223

/* SPM DCS S1 control */
#define MTK_SIP_KERNEL_SPM_DCS_S1_AARCH32 0x82000224
#define MTK_SIP_KERNEL_SPM_DCS_S1_AARCH64 0xC2000224

/* SPM dummy read */
#define MTK_SIP_KERNEL_SPM_DUMMY_READ_AARCH32 0x82000225
#define MTK_SIP_KERNEL_SPM_DUMMY_READ_AARCH64 0xC2000225

/* SPM sleep deepidle related SMC call */
#define MTK_SIP_KERNEL_SPM_SLEEP_DPIDLE_ARGS_AARCH32 0x82000226
#define MTK_SIP_KERNEL_SPM_SLEEP_DPIDLE_ARGS_AARCH64 0xC2000226

/* Check security CG (for deepidle/SODI) */
#define MTK_SIP_KERNEL_CHECK_SECURE_CG_AARCH32 0x82000227
#define MTK_SIP_KERNEL_CHECK_SECURE_CG_AARCH64 0xC2000227

/* HW FDE related SMC call */
#define MTK_SIP_KERNEL_HW_FDE_UFS_INIT_AARCH32  0x82000230
#define MTK_SIP_KERNEL_HW_FDE_UFS_INIT_AARCH64  0xC2000230
#define MTK_SIP_KERNEL_HW_FDE_AES_INIT_AARCH32  0x82000231
#define MTK_SIP_KERNEL_HW_FDE_AES_INIT_AARCH64  0xC2000231

/* MSDC HW FDE related SMC call */
#define MTK_SIP_KERNEL_HW_FDE_MSDC_INIT_AARCH32  0x82000240
#define MTK_SIP_KERNEL_HW_FDE_MSDC_INIT_AARCH64  0xC2000240

/* OTP related SMC call */
#define MTK_SIP_KERNEL_OTP_REINIT_AARCH32 0x82000250
#define MTK_SIP_KERNEL_OTP_REINIT_AARCH64 0xC2000250
#define MTK_SIP_KERNEL_OTP_BLOW_AARCH32   0x82000251
#define MTK_SIP_KERNEL_OTP_BLOW_AARCH64   0xC2000251
#define MTK_SIP_KERNEL_OTP_READ_AARCH32   0x82000252
#define MTK_SIP_KERNEL_OTP_READ_AARCH64   0xC2000252

/* astone added for debug purpose */
#define MTK_SIP_KERNEL_MSG_AARCH32	0x820002ff
#define MTK_SIP_KERNEL_MSG_AARCH64	0xC20002ff

/* For MTK HPT SMC Reserved */
/*	0x82000300 -	0x820003FF &	0xC2000300 -	0xC20003FF */

/* eTC reserve 0x300 ~ 0x31F */
#define MTK_SIP_KERNEL_ETC_INIT_AARCH32		0x82000300
#define MTK_SIP_KERNEL_ETC_INIT_AARCH64		0xC2000300
#define MTK_SIP_KERNEL_ETC_VOLT_CHG_AARCH32	0x82000301
#define MTK_SIP_KERNEL_ETC_VOLT_CHG_AARCH64     0xC2000301
#define MTK_SIP_KERNEL_ETC_PWR_OFF_AARCH32	0x82000302
#define MTK_SIP_KERNEL_ETC_PWR_OFF_AARCH64      0xC2000302
#define MTK_SIP_KERNEL_ETC_DMT_CTL_AARCH32	0x82000303
#define MTK_SIP_KERNEL_ETC_DMT_CTL_AARCH64      0xC2000303

#define MTK_SIP_KERNEL_ETC_RED_AARCH32	0x82000304
#define MTK_SIP_KERNEL_ETC_RED_AARCH64  0xC2000304
#define MTK_SIP_KERNEL_ETC_ANK_AARCH32	0x82000305
#define MTK_SIP_KERNEL_ETC_ANK_AARCH64  0xC2000305

//UDI reserve 0x3a0 ~ 0x3af
#define MTK_SIP_KERNEL_UDI_JTAG_CLOCK_AARCH32     0x820003A0
#define MTK_SIP_KERNEL_UDI_JTAG_CLOCK_AARCH64     0xC20003A0
#define MTK_SIP_KERNEL_UDI_BIT_CTRL_AARCH32       0x820003A1
#define MTK_SIP_KERNEL_UDI_BIT_CTRL_AARCH64       0xC20003A1
#define MTK_SIP_KERNEL_UDI_JTAG_CLOCK_BIG_AARCH32 0x820003A2
#define MTK_SIP_KERNEL_UDI_JTAG_CLOCK_BIG_AARCH64 0xC20003A2
#define MTK_SIP_KERNEL_UDI_BIT_CTRL_BIG_AARCH32   0x820003A3
#define MTK_SIP_KERNEL_UDI_BIT_CTRL_BIG_AARCH64   0xC20003A3

//iDVFS reserve	0x3b0 ~	0x3cf
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSENABLE_AARCH32				0x820003B0
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSENABLE_AARCH64				0xC20003B0
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSDISABLE_AARCH32				0x820003B1
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSDISABLE_AARCH64				0xC20003B1
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSFREQ_AARCH32				0x820003B2
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSFREQ_AARCH64				0xC20003B2
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSCHANNEL_AARCH32				0x820003B3
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSCHANNEL_AARCH64				0xC20003B3
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSWAVG_AARCH32				0x820003B4
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSWAVG_AARCH64				0xC20003B4
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSWAVGSTATUS_AARCH32			0x820003B5
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSWAVGSTATUS_AARCH64			0xC20003B5
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSWMODE_AARCH32				0x820003B6
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSWMODE_AARCH64				0xC20003B6
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSLOWMODE_AARCH32			0x820003B7
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSLOWMODE_AARCH64			0xC20003B7
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLSETFREQ_AARCH32			0x820003B8
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLSETFREQ_AARCH64			0xC20003B8
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLDISABLE_AARCH32			0x820003B9
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLDISABLE_AARCH64			0xC20003B9

#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLGETFREQ_AARCH32			0x820003BA //below is add
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLGETFREQ_AARCH64			0xC20003BA
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLSETPOSDIV_AARCH32		0x820003BB
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLSETPOSDIV_AARCH64		0xC20003BB
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLGETPOSDIV_AARCH32		0x820003BC
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLGETPOSDIV_AARCH64		0xC20003BC
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLSETPCW_AARCH32			0x820003BD
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLSETPCW_AARCH64			0xC20003BD
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLGETPCW_AARCH32			0x820003BE
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSPLLGETPCW_AARCH64			0xC20003BE
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSRAMLDOSET_AARCH32			0x820003BF
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSRAMLDOSET_AARCH64			0xC20003BF
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSRAMLDOGET_AARCH32			0x820003C0
#define MTK_SIP_KERNEL_IDVFS_BIGIDVFSSRAMLDOGET_AARCH64			0xC20003C0


//OCP reserve	0x3d0 ~	0x3df
#define MTK_SIP_KERNEL_OCP_WRITE_AARCH32	0x820003D0
#define MTK_SIP_KERNEL_OCP_WRITE_AARCH64	0xC20003D0
#define MTK_SIP_KERNEL_OCP_READ_AARCH32		0x820003D1
#define MTK_SIP_KERNEL_OCP_READ_AARCH64		0xC20003D1
#define MTK_SIP_KERNEL_OCPENDIS_AARCH32		0x820003D2
#define MTK_SIP_KERNEL_OCPENDIS_AARCH64		0xC20003D2
#define MTK_SIP_KERNEL_OCPTARGET_AARCH32	0x820003D3
#define MTK_SIP_KERNEL_OCPTARGET_AARCH64	0xC20003D3
#define MTK_SIP_KERNEL_OCPFREQPCT_AARCH32	0x820003D4
#define MTK_SIP_KERNEL_OCPFREQPCT_AARCH64	0xC20003D4
#define MTK_SIP_KERNEL_OCPVOLTAGE_AARCH32	0x820003D5
#define MTK_SIP_KERNEL_OCPVOLTAGE_AARCH64	0xC20003D5
#define MTK_SIP_KERNEL_OCPBIGINTCLR_AARCH32	0x820003D6
#define MTK_SIP_KERNEL_OCPBIGINTCLR_AARCH64	0xC20003D6
#define MTK_SIP_KERNEL_OCPMP0INTCLR_AARCH32	0x820003D7
#define MTK_SIP_KERNEL_OCPMP0INTCLR_AARCH64	0xC20003D7
#define MTK_SIP_KERNEL_OCPMP1INTCLR_AARCH32	0x820003D8
#define MTK_SIP_KERNEL_OCPMP1INTCLR_AARCH64	0xC20003D8
#define MTK_SIP_KERNEL_OCPBIGINTENDIS_AARCH32	0x820003D9
#define MTK_SIP_KERNEL_OCPBIGINTENDIS_AARCH64	0xC20003D9
#define MTK_SIP_KERNEL_OCPMP0INTENDIS_AARCH32	0x820003DA
#define MTK_SIP_KERNEL_OCPMP0INTENDIS_AARCH64	0xC20003DA
#define MTK_SIP_KERNEL_OCPMP1INTENDIS_AARCH32	0x820003DB
#define MTK_SIP_KERNEL_OCPMP1INTENDIS_AARCH64	0xC20003DB
#define MTK_SIP_KERNEL_OCPINTLIMIT_AARCH32	0x820003DC
#define MTK_SIP_KERNEL_OCPINTLIMIT_AARCH64	0xC20003DC
#define MTK_SIP_KERNEL_OCPLKGMONENDIS_AARCH32	0x820003DD
#define MTK_SIP_KERNEL_OCPLKGMONENDIS_AARCH64	0xC20003DD
#define MTK_SIP_KERNEL_OCPVALUESTATUS_AARCH32	0x820003DE
#define MTK_SIP_KERNEL_OCPVALUESTATUS_AARCH64	0xC20003DE
#define MTK_SIP_KERNEL_OCPIRQHOLDOFF_AARCH32	0x820003DF
#define MTK_SIP_KERNEL_OCPIRQHOLDOFF_AARCH64	0xC20003DF
#define MTK_SIP_KERNEL_OCPCONFIGMODE_AARCH32	0x820003E0
#define MTK_SIP_KERNEL_OCPCONFIGMODE_AARCH64	0xC20003E0
#define MTK_SIP_KERNEL_OCPLEAKAGE_AARCH32	0x820003E1
#define MTK_SIP_KERNEL_OCPLEAKAGE_AARCH64	0xC20003E1

/* SCP DVFS related SMC call */
#define MTK_SIP_KERNEL_SCP_DVFS_CTRL_AARCH32 0x820003E2
#define MTK_SIP_KERNEL_SCP_DVFS_CTRL_AARCH64 0xC20003E2

/* For MTK SMC Reserved */
/*      0x82000400 -    0x82000FFF &    0xC2000400 -    0xC2000FFF */

/*
 * Number of SIP calls (above) implemented.
 */
#define MTK_SIP_SVC_NUM_CALLS			2

/* The macros below are used to identify SIP calls from the SMC function ID */
/* SMC32 ID range from	0x82000000 to	0x82000FFF */
/* SMC64 ID range from	0xC2000000 to	0xC2000FFF */
#define SIP_FID_MASK			0xf000u
#define SIP_FID_VALUE			0u
#define is_sip_fid(_fid) \
	(((_fid) & SIP_FID_MASK) == SIP_FID_VALUE)

#endif /* __PLAT_SIP_SVC_H__ */
