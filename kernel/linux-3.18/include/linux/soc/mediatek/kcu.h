#ifndef KCU_H_FILE
#define KCU_H_FILE 1

#ifdef __KERNEL__
#include <linux/spinlock.h>
#include <linux/time.h>
#endif
#define KCU_MEASURE_TIME 0
#define KCU_CHK_SUM 0
typedef enum
{
    NFY_USR_TEST_SYNC_KCU1,
    NFY_USR_TEST_SYNC_KCU2,   
    NFY_USR_THD_EXIT,    
    NFY_PANEL_GETPANELWIDTH,
    NFY_PANEL_GETPANELHEIGHT,
    NFY_PANEL_SETPANELWIDTH,
    NFY_PANEL_SETPANELHEIGHT,
    NFY_GRAPHMODE_GETPANELWIDTH,
    NFY_GRAPHMODE_GETPANELHEIGHT,
    NFY_PANEL_GETCONTROLWORD,
    NFY_PANEL_GETCONTROLWORD2,
    NFY_FGISOSDFROMGFX,
    NFY_FGISMJCTOOSTG,
    NFY_VDRVSWITCHOSDROUTE,
    NFY_WDRVGETHSYNCBP,
    NFY_U1GETFLIPMIRRORCONFIG,
    NFY_VDRVGETOSDSTARTPOSITION,
    NFY_IMGRZ_CFG_MMU_IO_EX,
    NFY_IMGRZ_FLUSH,
    NFY_IMGRZ_FLUSH_EX,
    NFY_IMGRZ_LOCK,
    NFY_IMGRZ_LOCK_EX,
    NFY_IMGRZ_REINIT,
    NFY_IMGRZ_REINIT_EX,
    NFY_IMGRZ_SCALE,
    NFY_IMGRZ_SCALE_EX,
    NFY_IMGRZ_SETSCALEOPT,
    NFY_IMGRZ_SETSCALEOPT_EX,
    NFY_IMGRZ_UNLOCK,
    NFY_IMGRZ_UNLOCK_EX,
    NFY_IMGRZ_WAIT,
    NFY_IMGRZ_WAIT_EX,
    NFY_IMG_LOCKHWRESOURCE,
    NFY_IMG_UNLOCKHWRESOURCE,
    NFY_BSP_GETFBMMEMADDR,
    NFY_DRVCUST_OPTQUERY,
    NFY_DRVCUST_OPTQUERYUPTR,
    NFY_FBM_GETPOOLINFO,
    NFY_FBM_INIT,
    NFY_SETHIDKBCOUNTRY,
    NFY_GETHIDKBCOUNTRY,
    NFY_VDP_SETENABLE,
    NFY_FBM_GETFRAMEBUFFERPICHDR,
    NFY_FBM_GETFRAMEBUFFERSEQHDR,
    NFY_FBM_GETFBBYDISPTAG,
    NFY_FBM_GETFRAMEBUFFERADDR,
    NFY_FBM_GETFRAMEBUFFERADDREXT,
    NFY_PANEL_GETCURRENTPANELHEIGHTCM,
    NFY_PANEL_GETCURRENTPANELWIDTHCM,
    NFY_PMX_SETPLANEORDERARRAY,
    NFY_DRV_EXTMJC_INIT,
    NFY_PMX_INIT,
    NFY_AUD_INITALSAPLAYBACK_MIXSND,
    NFY_AUD_DEINITALSAPLAYBACK_MIXSND,
    NFY_AUD_SETDSPDECODERTYPE,
    NFY_AUD_SETDSPSAMPLERATE,
    NFY_AUD_SETDSPCHANNELNUM,
    NFY_AUD_SETDSPDECODERPAUSE,
    NFY_AUD_SETDSPDECODERRESUME,
    NFY_AUD_FLUSHAFIFO,
    NFY_AUD_GETMIXSNDFIFOSTART,
    NFY_AUD_GETMIXSNDFIFOEND,
    NFY_AUD_GETMIXSNDREADPTR,
    NFY_AUD_SETMIXSNDWRITEPTR,
    NFY_AUD_PLAYMIXSNDRINGFIFO,
    NFY_AUD_FLUSHDRAM,
    NFY_AUD_INITALSARECORDSPEAKER,
    NFY_AUD_DEINITALSARECORDSPEAKER,
    NFY_AUD_GETUPLOADFIFOSTART,
    NFY_AUD_GETUPLOADFIFOEND,
    NFY_AUD_GETUPLOADWRITEPNT,
    NFY_ISHPPLUGIN,
    NFY_EEPROM_GETSIZE,
    NFY_EEPROM_INIT,
    NFY_EEPROM_READ,
    NFY_EEPROM_WRITE,    
	//STR start
    NFY_ADC_PM_RESUME,
    NFY_AUD_PM_STR_RESUME,
    NFY_AUD_PM_STR_SUSPEND,
    NFY_B2R_PM_STR_RESUME,
    NFY_B2R_PM_STR_SUSPEND,
    NFY_BAPIVIDEOMAINSUBSRC,
    NFY_CEC_PM_RESUME,
    NFY_CEC_PM_SUSPEND,
    NFY_DMARB_MID_RESUME,
    NFY_DMARB_MID_SUSPEND,
    NFY_DMX_PM_STR_RESUME,
    NFY_DMX_PM_STR_SUSPEND,
    NFY_EEPDTV_GETCFG,
    NFY_GCPU_PM_STR_RESUME,
    NFY_GCPU_PM_STR_SUSPEND,
    NFY_GDMA_PM_STR_RESUME,
    NFY_GDMA_PM_STR_SUSPEND,
    NFY_GPIO_PM_STR_RESUME,
    NFY_GPIO_PM_STR_SUSPEND,
    NFY_HDMI2_PM_RESUME,
    NFY_HDMI2_PM_SUSPEND,
    NFY_IMAGE_PM_STR_RESUME,
    NFY_IMAGE_PM_STR_SUSPEND,
    NFY_IMGRZ_PM_STR_RESUME,
    NFY_IMGRZ_PM_STR_SUSPEND,
    NFY_IRRX_PM_RESUME,
    NFY_IRTX_PM_RESUME,
    NFY_IRTX_PM_SUSPEND,
    NFY_MHL_PM_RESUME,
    NFY_MHL_PM_SUSPEND,
    NFY_MID_QUERYINTRUSIONSTATUS,
    NFY_MID_WARMBOOTREGIONPROTECT,
    NFY_PCMCIA_PM_STR_RESUME,
    NFY_PCMCIA_PM_STR_SUSPEND,
    NFY_PDWNC_ENTERSUSPEND,
    NFY_PDWNC_READWAKEUPREASON,
    NFY_PDWNC_REBOOT,
    NFY_PDWNC_RESUME,
    NFY_PDWNC_SETSUSPENDMODE,
    NFY_PMX_PM_RESUME,
    NFY_PMX_PM_SUSPEND,
    NFY_PWM_PM_STR_RESUME,
    NFY_PWM_PM_STR_SUSPEND,
    NFY_SIF_PM_STR_RESUME,
    NFY_SIF_PM_STR_SUSPEND,
    NFY_SMC_DEACTIVATE_NOLOCK,    
    NFY_TUNER_PM_STR_RESUME,
    NFY_TUNER_PM_STR_SUSPEND,
    NFY_TVD_PM_RESUME,
    NFY_TVD_PM_SUSPEND,
    NFY_TVE_PM_RESUME,
    NFY_TVE_PM_SUSPEND,
    NFY_VBI_PM_RESUME,
    NFY_VBI_PM_SUSPEND,
    NFY_VDEC_PM_STR_RESUME,
    NFY_VDEC_PM_STR_SUSPEND,
    NFY_VDRVDISPLAYINIT_PM_RESUME,
    NFY_VDRVLVDSRESUME,
    NFY_VDRVLVDSSUSPEND,
    NFY_VDRVNPTVRESUME,
    NFY_VDRVTHERMAL_PM_RESUME,
    NFY_VDRVTHERMAL_PM_SUSPEND,
    NFY_VDRVVIDEORESUME,
    NFY_VDRVVIDEOSUSPEND,
    NFY_VDRVVOPLLRESUME,
    NFY_VDRVVOPLLSUSPEND,
    NFY_VENC_PM_STR_RESUME,
    NFY_VENC_PM_STR_SUSPEND,
    NFY_WDT_PM_RESUME,
    NFY_WDT_PM_SUSPEND,
    //STR END
    NFY_USR_MAX,
}NFY_USR_ID;
typedef struct nfy_usr_header
{
    NFY_USR_ID eFctId;
    unsigned int u4TagSize; 
#if KCU_MEASURE_TIME    
    struct timeval send_tm;
#endif
#if KCU_CHK_SUM
    unsigned int sum;
#endif
}NFY_USR_HEADER_T;
typedef struct signal_thread_info
{
    union 
    {
        unsigned long data_buf;//the user buffer to copy cb event    
        unsigned char pad[8];//8bytes
    }u;
    int signo;//the RT signal  used to wakeup and wait
    unsigned char bsync;//the kernel will wait the callback finish 
}SIGNAL_THREAD_INFO_T;
#define usr_buf u.data_buf

typedef struct nfy_func_info
{
    NFY_USR_ID eFctId;
    unsigned char bsync;
    unsigned char nfy_en;    
} NFY_FUNC_INFO_T;
#ifdef __KERNEL__
#include <linux/completion.h>
struct notifier_data
{
    void __user * usr_buf_addr;//the user buffer to copy cb event
    atomic_t        live_sigcnt;//record the remaining signal count to process
    struct completion * done;
    unsigned long ret_size;//the return size from synchronous call
    unsigned char *retbuf;//the buffer used to store return information from synchronous call
};
int kcu_notify_sync(NFY_USR_ID nfy_id,void * pvArg,unsigned int u4TagSize,void * pret,unsigned long ret_size);
int kcu_notify_async(NFY_USR_ID nfy_id,void * pvArg,unsigned int u4TagSize);
#endif

#define NFY_MAX_STRUCT_SIZE  4096-sizeof(struct nfy_usr_header)

#endif
