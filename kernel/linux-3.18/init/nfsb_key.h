/* RSA-2048 modulus, big-endian. Replace with your real value. */
static uint8_t rsa_modulus[256] =
{
    0xd2, 0x7c, 0x78, 0x2e, 0x53, 0x5f, 0x3c, 0x78,
	0x67, 0x72, 0x22, 0x4c, 0xc2, 0x60, 0xbd, 0xa9,
	0x6a, 0xc7, 0xf8, 0x25, 0x6c, 0x0c, 0x74, 0xf2,
	0x97, 0x32, 0x40, 0x2a, 0x30, 0x07, 0xb3, 0x3a,
	0x62, 0xb8, 0x3f, 0xa7, 0x11, 0xd9, 0x9c, 0xb6,
	0x69, 0x43, 0x1e, 0x97, 0xb4, 0x01, 0x1b, 0xc3,
	0xfa, 0xc1, 0x88, 0x85, 0x26, 0xa7, 0xf8, 0xd2,
	0xd5, 0x53, 0xf1, 0x28, 0x29, 0x3f, 0x19, 0xf9,
	0xa1, 0x67, 0x13, 0xe6, 0x12, 0x4a, 0x24, 0x2c,
	0x6e, 0x68, 0x55, 0xa6, 0x57, 0x44, 0x1b, 0x35,
	0xe1, 0x0c, 0x8a, 0xf1, 0x64, 0xd5, 0x27, 0x7b,
	0x74, 0x3a, 0x6b, 0x13, 0xb7, 0x92, 0x92, 0x3b,
	0xbc, 0x41, 0xf3, 0x0d, 0x0a, 0x1d, 0xaa, 0xa1,
	0x0f, 0xd3, 0x80, 0x75, 0xad, 0xf9, 0x82, 0x79,
	0xd5, 0xbc, 0x13, 0xb9, 0x07, 0x3b, 0x2c, 0xeb,
	0xc6, 0x23, 0xa8, 0xe5, 0x2d, 0x9a, 0xce, 0xd1,
	0x2c, 0xec, 0xed, 0x4d, 0xd6, 0x4a, 0x1b, 0x17,
	0x72, 0xba, 0xef, 0x0f, 0xd4, 0x40, 0x98, 0x05,
	0x76, 0xf1, 0x4e, 0x65, 0x37, 0x95, 0x5c, 0xe1,
	0x4a, 0x9b, 0x22, 0x66, 0x6e, 0xe3, 0x4b, 0x01,
	0xf9, 0xf0, 0x5a, 0xb3, 0xef, 0xc5, 0x82, 0x9a,
	0x43, 0xba, 0xa8, 0xbb, 0x0d, 0xbe, 0x16, 0xc6,
	0x41, 0x57, 0xc3, 0x01, 0x54, 0x65, 0x62, 0x50,
	0xfa, 0x0c, 0x9f, 0x8f, 0xa3, 0x46, 0x5c, 0x58,
	0x9f, 0xc1, 0xe0, 0xaa, 0xa1, 0x71, 0xc8, 0x9e,
	0x00, 0x7d, 0xa3, 0x11, 0xdd, 0xef, 0x1b, 0x1d,
	0x13, 0xad, 0x97, 0x03, 0xdf, 0xf5, 0x4a, 0xb5,
	0x73, 0xe1, 0x0e, 0xe3, 0x79, 0xea, 0x73, 0x51,
	0x6a, 0x72, 0x68, 0x8a, 0xf3, 0xa5, 0x64, 0xb2,
	0xf3, 0xd1, 0xe5, 0x6f, 0xc7, 0xaa, 0x7b, 0xef,
	0x3d, 0x5a, 0x91, 0x1c, 0x74, 0xda, 0x49, 0xc2,
	0x35, 0x51, 0xfa, 0xc7, 0x3d, 0xcd, 0xf1, 0x39
};

/* RSA-2048 public key exponent, big-endian. Replace with your real value. */
static uint8_t rsa_pubkey[256] =
{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01
};
